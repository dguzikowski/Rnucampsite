[{"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"4","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"5","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"7","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"19","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"20","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":638,"mtime":1612310158863,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1611533454770,"results":"28","hashOfConfig":"27"},{"size":622,"mtime":1613729576364,"results":"29","hashOfConfig":"27"},{"size":3795,"mtime":1613799348103,"results":"30","hashOfConfig":"27"},{"size":2048,"mtime":1613801667944,"results":"31","hashOfConfig":"27"},{"size":6214,"mtime":1613800746288,"results":"32","hashOfConfig":"27"},{"size":1242,"mtime":1612424309997,"results":"33","hashOfConfig":"27"},{"size":5106,"mtime":1613723772070,"results":"34","hashOfConfig":"27"},{"size":1915,"mtime":1612313420381,"results":"35","hashOfConfig":"27"},{"size":1732,"mtime":1613810237839,"results":"36","hashOfConfig":"27"},{"size":9832,"mtime":1613716237104,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1612424350016,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1612424356538,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1612424362105,"results":"40","hashOfConfig":"27"},{"size":4016,"mtime":1612645552692,"results":"41","hashOfConfig":"27"},{"size":800,"mtime":1613715627687,"results":"42","hashOfConfig":"27"},{"size":570,"mtime":1613792660225,"results":"43","hashOfConfig":"27"},{"size":625,"mtime":1613710131947,"results":"44","hashOfConfig":"27"},{"size":696,"mtime":1613779791058,"results":"45","hashOfConfig":"27"},{"size":181,"mtime":1613698662232,"results":"46","hashOfConfig":"27"},{"size":4432,"mtime":1613793563774,"results":"47","hashOfConfig":"27"},{"size":446,"mtime":1613777226073,"results":"48","hashOfConfig":"27"},{"size":235,"mtime":1613727383591,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1613715277787,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613776984665,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"7y7yyh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["107","108"],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["109","110","111"],"import React, { Component } from \"react\";\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderCampsite({ campsite }) {\n  return (\n    <div className=\"col-md-5 m-1\">\n      <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n      <Card>\n        <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n        <CardBody>\n          <CardText>{campsite.description}</CardText>\n        </CardBody>\n      </Card>\n      </FadeTransform>\n    </div>\n  );\n}\n\nfunction RenderComments({ comments, postComment,  campsiteId}) {\n  if (comments) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <h4>Comments</h4>\n        <Stagger in>\n          {\n            comments.map(comment => {\n              return (\n                <Fade in key={comment.id}>\n                  <div>\n                    <p>\n                      {comment.text}<br />\n                      --{comment.author},{\" \"}\n                      {new Intl.DateTimeFormat(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"short\",\n                        day: \"2-digit\",\n                      }).format(new Date(Date.parse(comment.date)))}\n                    </p>\n                  </div>\n                </Fade>\n              );\n            })\n          }\n        </Stagger>\n        <CommentForm campsiteId={campsiteId} postComment={postComment} />\n      </div>\n    );\n  }\n  return <div />;\n}\n\nfunction CampsiteInfo(props) {\n  if (props.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  }\n\n  if (props.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4>{props.errMess}</h4>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (props.campsite) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/directory\">Directory</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>{props.campsite.name}</h2>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderCampsite campsite={props.campsite} />\n          <RenderComments\n            comments={props.comments} \n            postComment={props.postComment}\n            campsiteId={props.campsite.id}\n          />\n        </div>\n      </div>\n    );\n  }\n  return <div />;\n}\n\nconst required = (val) => val && val.length;\nconst maxLength = len => val => !(val) || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({ isModalOpen: !this.state.isModalOpen });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.capsiteId, values.rating, values.author, values.text);\n  }\n\n  render() {\n    return (\n      <>\n        <Button outline onClick={this.toggleModal}>\n          <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              \n              <div className=\"form-group\">\n                <Label htmlFor=\"rating\">Rating</Label>\n                <Control.select\n                  model=\".rating\"\n                  id=\"rating\"\n                  name=\"rating\"\n                  className=\"form-control\">\n                  <option></option>\n                  <option>1 Star Rating</option>\n                  <option>2 Star Rating</option>\n                  <option>3 Star Rating</option>\n                  <option>4 Star Rating</option>\n                  <option>5 Star Rating</option>\n                </Control.select>\n              </div>\n\n              <div className=\"form-group\">\n                <Label htmlFor=\"author\">Your Name</Label>\n                <Control.text\n                  id=\"author\"\n                  name=\"author\"\n                  model=\".author\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(2),\n                    maxLength: maxLength(15),\n                  }}\n                />\n\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  component=\"div\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be at least 2 characters\",\n                    maxLength: \"Must be 15 characters or less\",\n                  }}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <Label htmlFor=\"text\">Comment</Label>\n                <Control.textarea\n                  id=\"text\"\n                  name=\"text\"\n                  model=\".text\"\n                  placeholder=\"Leave Comment\"\n                  className=\"form-control\"\n                  rows=\"6\"\n                ></Control.textarea>\n              </div>\n              <Button type=\"submit\" color=\"primary\">Submit</Button>\n\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default CampsiteInfo;","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["112","113"],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["114","115","116","117","118","119","120","121"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors, Actions } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n    }\n\n\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                        <Col md={10}>\n                            <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                placeholder=\"First Name\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, \n                                    minLength: minLength(2),\n                                    maxLength: maxLength(15)\n                                }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".firstName\"\n                                show=\"touched\"\n                                component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be at least 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                        <Col md={10}>\n                            <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                placeholder=\"Last Name\"\n                                className=\"form-control\"\n                                validators={{\n                                    required,\n                                    minLength: minLength(2),\n                                    maxLength: maxLength(15)\n                                }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".lastName\"\n                                show=\"touched\"\n                                component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be at least 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                        <Col md={10}>\n                            <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                placeholder=\"Phone number\"\n                                className=\"form-control\"\n                                validators={{\n                                    required,\n                                    minLength: minLength(10),\n                                    maxLength: maxLength(15),\n                                    isNumber\n                                }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".phoneNum\"\n                                show=\"touched\"\n                                component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be at least 10 numbers',\n                                    maxLength: 'Must be 15 numbers or less',\n                                    isNumber: 'Must be a number'\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                placeholder=\"Email\"\n                                className=\"form-control\"\n                                validators={{\n                                    required,\n                                    validEmail\n                                }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".email\"\n                                show=\"touched\"\n                                component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                    validEmail: 'Invalid email address'\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Col md={{size: 4, offset: 2}}>\n                            <div className=\"form-check\">\n                                <Label check>\n                                    <Control.checkbox\n                                        model=\".agree\"\n                                        name=\"agree\"\n                                        className=\"form-check-input\"\n                                    /> {' '}\n                                    <strong>May we contact you?</strong>\n                                </Label>\n                            </div>\n                        </Col>\n                        <Col md={4}>\n                            <Control.select model=\".contactType\" name=\"contactType\"\n                                className=\"form-control\">\n                                <option>By Phone</option>\n                                <option>By Email</option>\n                            </Control.select>\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                        <Col md={10}>\n                            <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                rows=\"12\"\n                                className=\"form-control\"\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Col md={{size: 10, offset: 2}}>\n                            <Button type=\"submit\" color=\"primary\">\n                                Send Feedback\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",["122"],"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nimport { findRenderedDOMComponentWithTag } from 'react-dom/test-utils';\n\nexport const fetchCampsites = () => dispatch => {\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n    const newComment = {\n        campsiteId: campsiteId, \n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            const error = new Error(`Error ${response.status}: ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});","/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/davidguzikowski/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":148,"column":17,"nodeType":"129","endLine":152,"endColumn":44},{"ruleId":"127","severity":1,"message":"130","line":164,"column":17,"nodeType":"129","endLine":175,"endColumn":19},{"ruleId":"127","severity":1,"message":"131","line":192,"column":17,"nodeType":"129","endLine":199,"endColumn":18},{"ruleId":"123","replacedBy":"132"},{"ruleId":"125","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":5,"column":33,"nodeType":"136","messageId":"137","endLine":5,"endColumn":40},{"ruleId":"127","severity":1,"message":"130","line":82,"column":29,"nodeType":"129","endLine":90,"endColumn":31},{"ruleId":"127","severity":1,"message":"130","line":107,"column":29,"nodeType":"129","endLine":115,"endColumn":31},{"ruleId":"127","severity":1,"message":"130","line":132,"column":29,"nodeType":"129","endLine":141,"endColumn":31},{"ruleId":"127","severity":1,"message":"130","line":159,"column":29,"nodeType":"129","endLine":166,"endColumn":31},{"ruleId":"127","severity":1,"message":"138","line":183,"column":37,"nodeType":"129","endLine":187,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":193,"column":29,"nodeType":"129","endLine":194,"endColumn":58},{"ruleId":"127","severity":1,"message":"131","line":203,"column":29,"nodeType":"129","endLine":206,"endColumn":31},{"ruleId":"134","severity":1,"message":"139","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":41},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["140"],["141"],"no-unused-vars","'Actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'findRenderedDOMComponentWithTag' is defined but never used.","no-global-assign","no-unsafe-negation"]